---
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import Container from "../components/container.astro";
import Sectionhead from "../components/sectionhead.astro";
import Pricing from "../components/Pricing.jsx";

// Filter team entries with 'draft: false' & date before current date
const publishedFeesStructure = await getCollection("services");

const prices = {
  4: { 1: 800, 2: 1500, 3: 1700, 4: '', 5: '' },
  5: { 1: 800, 2: 1500, 3: 1700, 4: '', 5: '' },
  6: { 1: 800, 2: 1400, 3: 1600, 4: 1800, 5: 1900 },
  7: { 1: 800, 2: 1400, 3: 1600, 4: 1900, 5: 2000 },
  8: { 1: 800, 2: 1500, 3: 1900, 4: 2000, 5: 2100 },
  9: { 1: 800, 2: 1500, 3: 1700, 4: 2000, 5: 2200 },
  10: { 1: 800, 2: 1500, 3: 2000, 4: 2100, 5: 2300 },
  11: { 1: 1200, 2: 2000, 3: 3000, 4: '', 5: '' },
  12: { 1: 1200, 2: 2000, 3: 3000, 4: '', 5: '' },
  // Add more rows as needed
  // ...
};
---


<Layout title="Services" >
  <Container>
    <Sectionhead>
      <Fragment slot="title">Services</Fragment>
      <Fragment slot="desc">Services we provide.</Fragment>
    </Sectionhead>

    <div class="flex flex-col gap-3 mx-auto max-w-4xl mt-16 ">
      <h2 class="font-bold text-3xl text-gray-800">
        Why Us
      </h2>
      <p class="text-lg leading-relaxed text-slate-500">
        Fed up with the unsatisfactory results of your child? You know that the potential  of your child is much more. You are providing your child with best possible guidance according to you!

        Do you know that most of the coaching centres do not even have permanent
        
        teachers to provide a consistent guidance.
        
        Constant change of teachers leads to wastage of much required time.
        
        A huge student teacher ratio hardly benefits your child
        
        An inexperienced home tutor on the other hand can only provide inadequate
        
        guidance and lack of exposure to competition.
      </p>
    </div>
    <div class="grid md:grid-cols-3 gap-10 mx-auto max-w-4xl mt-12 mb-16">
      {
        publishedFeesStructure.map((fees) => (
          <div class="group">
            <div class="w-full aspect-square bg-gray-300 p-4 flex flex-col justify-center items-center">
                <p>{fees.data.name}</p>
                <p>{fees.data.features.subjects}</p>
                <span>for classes</span>
                <p>{fees.data.classes}</p>
            </div>
          </div>
        ))
      }
    </div>
  </Container>
  <Pricing />
  <div class="grid grid-cols-6 gap-4 mx-auto max-w-4xl mt-12 mb-16">
    {/* Top-left cell */}
    <div class="group"></div>
  
    {/* Top row for subjects */}
    {[1, 2, 3, 4, 5].map((subject) => (
      <div class="group" key={`subject-${subject}`}>
        <div class="w-full bg-gray-300 p-4 flex justify-center items-center">
          <p class="font-bold">No of subjects {subject}</p>
        </div>
      </div>
    ))}
  
    {/* Left column for classes */}
    {[4, 5, 6, 7, 8, 9, 10, 11, 12].map((classNumber) => (
      <Fragment key={`class-${classNumber}`}>
        {/* Left header for each class */}
        <div class="group">
          <div class="w-full bg-gray-300 p-4 flex justify-center items-center">
            <p class="font-bold">Class {classNumber}</p>
          </div>
        </div>
  
        {/* Cells for each subject */}
        {[1, 2, 3,4,5 ].map((subject) => (
            <div class="group" key={`cell-${classNumber}-${subject}`}>
              <div class="w-full bg-gray-100 p-4 flex justify-center items-center">
                {/* Access the price from the prices object */}
                {prices[classNumber] && prices[classNumber][subject] !== undefined ? (
                  <p>â‚¹{prices[classNumber][subject]}</p>
                ) : (
                  <p>N/A</p>
                )}
              </div>
            </div>
          ))}
      </Fragment>
    ))}
  </div>
  
</Layout>